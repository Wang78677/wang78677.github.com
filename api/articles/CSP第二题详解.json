{"title":"CSP第二题详解","slug":"CSP第二题详解","date":"2022-12-30T16:00:00.000Z","updated":"2023-02-19T10:11:18.257Z","comments":true,"path":"api/articles/CSP第二题详解.json","photos":[],"link":"","excerpt":"引言首先声明，我的这篇文章仅更新20年之后的这三年的第二题，但也有两道17年的题目，因为我把所有CSP的第二题做过之后发现，20年之前的难度相较于20年之后的难度还是有比较大的区别的。首先是题目类型就有很大的区别，我个人观点是20年之前的其实相对来说是比较容易的，因为大多并不涉及算法，只要能够理清楚思路，大多暴力算法就可以解出，就算是思路不是很清晰，也可以通过一些比较繁杂的计算或者说是一步一步慢慢的算，也是能算出答案的。但是对于20年之后的这些题目来说，如果只是按照之前的结果，一般只能得70分，只有70分是可以通过暴力算法解出来的，但对于另外的30分来说，必须要使用算法， 而这也是我觉得进两年题目比较难的原因，但这些算法相对来说确实很适合初步接触算法的人（比如我个水平的人），难度相对来说也并不是很大，也比较容易理解，理解之后个人一种豁然开朗的感觉，因此我决定将这几道题进行一个详解，不仅是希望自己能够更好的理解这些题目，更希望可以帮助其他人。","covers":["/../images/image-20230219173840935.png","/../images/image-20230219173923177.png","/../images/image-20230213193143904.png","/../images/image-20230214123534821.png","/../images/image-20230214124836111.png","/../images/image-20230215151242859.png","/../images/image-20230215151426313.png","/../images/image-20230215151441084.png"],"content":"<h1 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h1><p><code>首先声明，我的这篇文章仅更新20年之后的这三年的第二题，但也有两道17年的题目，因为我把所有CSP的第二题做过之后发现，20年之前的难度相较于20年之后的难度还是有比较大的区别的。首先是题目类型就有很大的区别，我个人观点是20年之前的其实相对来说是比较容易的，因为大多并不涉及算法，只要能够理清楚思路，大多暴力算法就可以解出，就算是思路不是很清晰，也可以通过一些比较繁杂的计算或者说是一步一步慢慢的算，也是能算出答案的。但是对于20年之后的这些题目来说，如果只是按照之前的结果，一般只能得70分，只有70分是可以通过暴力算法解出来的，但对于另外的30分来说，必须要使用算法， 而这也是我觉得进两年题目比较难的原因，但这些算法相对来说确实很适合初步接触算法的人（比如我个水平的人），难度相对来说也并不是很大，也比较容易理解，理解之后个人一种豁然开朗的感觉，因此我决定将这几道题进行一个详解，不仅是希望自己能够更好的理解这些题目，更希望可以帮助其他人。</code></p>\n<span id=\"more\"></span>\n\n<h1 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h1><p>[CSP 202212-2 训练计划](# CSP202212-2训练计划)</p>\n<p><a href=\"#CSP202209-2%E4%BD%95%E4%BB%A5%E5%8C%85%E9%82%AE\">CSP 202209-2 何以包邮</a></p>\n<p><a href=\"#CSP202206-2%E5%AF%BB%E5%AE%9D%E5%A4%A7%E5%86%92%E9%99%A9\">CSP 202206-2 寻宝！大冒险！</a></p>\n<p><a href=\"#CSP202203-2%E5%87%BA%E8%A1%8C%E8%AE%A1%E5%88%92\">CSP 202203-2 出行计划</a></p>\n<p><a href=\"#202112-2%E5%BA%8F%E5%88%97%E6%9F%A5%E8%AF%A2%E6%96%B0%E8%A7%A3\">CSP 202112-2 序列查询新解</a></p>\n<p><a href=\"#CSP201709-2%E5%85%AC%E5%85%B1%E9%92%A5%E5%8C%99%E7%9B%92\">CSP 201709-2 公共钥匙盒</a></p>\n<p><a href=\"#CSP201712-2%E6%B8%B8%E6%88%8F\">CSP 201712-2 游戏</a></p>\n<h1 id=\"CSP202212-2训练计划\"><a href=\"#CSP202212-2训练计划\" class=\"headerlink\" title=\"CSP202212-2训练计划\"></a>CSP202212-2训练计划</h1><p><img src=\"/../images/image-20230219173840935.png\" alt=\"image-20230219173840935\"></p>\n<h2 id=\"样例-1-输入\"><a href=\"#样例-1-输入\" class=\"headerlink\" title=\"样例 1 输入\"></a>样例 1 输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10 5</span><br><span class=\"line\">0 0 0 0 0</span><br><span class=\"line\">1 2 3 2 10</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例-1-输出\"><a href=\"#样例-1-输出\" class=\"headerlink\" title=\"样例 1 输出\"></a>样例 1 输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 1 1 1 1</span><br><span class=\"line\">10 9 8 9 1</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例-1-说明\"><a href=\"#样例-1-说明\" class=\"headerlink\" title=\"样例 1 说明\"></a>样例 1 说明</h2><p>五项科目间没有依赖关系，都可以从第 1 天就开始训练。</p>\n<p>10 天时间恰好可以完成所有科目的训练。其中科目 1 耗时仅 1 天，所以最晚可以拖延到第 10 天再开始训练；而科目 5 耗时 10 天，必须从第 1 天就开始训练。</p>\n<h2 id=\"样例-2-输入\"><a href=\"#样例-2-输入\" class=\"headerlink\" title=\"样例 2 输入\"></a>样例 2 输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10 7</span><br><span class=\"line\">0 1 0 3 2 3 0</span><br><span class=\"line\">2 1 6 3 10 4 3</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例-2-输出\"><a href=\"#样例-2-输出\" class=\"headerlink\" title=\"样例 2 输出\"></a>样例 2 输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 3 1 7 4 7 1</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/../images/image-20230219173923177.png\" alt=\"image-20230219173923177\"></p>\n<h2 id=\"样例-3-输入\"><a href=\"#样例-3-输入\" class=\"headerlink\" title=\"样例 3 输入\"></a>样例 3 输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10 5</span><br><span class=\"line\">0 1 2 3 4</span><br><span class=\"line\">10 10 10 10 10</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例-3-输出\"><a href=\"#样例-3-输出\" class=\"headerlink\" title=\"样例 3 输出\"></a>样例 3 输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 11 21 31 41</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"子任务\"><a href=\"#子任务\" class=\"headerlink\" title=\"子任务\"></a>子任务</h2><p>70% 的测试数据满足：顿顿无法在 n 天内完成全部 m 项科目的训练，此时仅需输出一行“最早开始时间”；</p>\n<p>全部的测试数据满足 0&lt;n≤365 且 0&lt;m≤100。</p>\n<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>这一题是我认为的20年之后的题目中最简单的一道，毕竟我做了出来，主要原因应该还是因为这题并不使用算法。</p>\n<ul>\n<li><p>首先70分来说是很容易的，直接输出一行就行，不用判断是否会超时</p>\n<p>如果没有依赖关系，那就直接从第一填开始，如果有依赖关系，那就根据所依赖的科目的最早开始时间和所需天数算出最早开始时间即可，由于这题的依赖关系只能是大编号依赖于小编好，因此其实是非常好解的，只需将i从1到m按顺序计算即可</p>\n</li>\n<li><p>对于剩下的30分，就需要考虑到最晚开始时间，如果要算最晚开始时间，我们就需要倒着来算，因此i是从m到1，然后就是用最终时间减去科目所需要的时间，但显然这样简单地判断考虑的并不全面，因为每个科目之间还存在依赖关系，如果某一科目依赖于前面的科目，那么前面科目的最晚开始时间只能是后一个科目的最晚开始时间减去前面科目所需的时间，因为我们要确保所有科目都能在规定时间内完成，因此如果两个科目同时依赖于一个科目，那么这一科目的最晚开始时间要选择较早的那个</p>\n</li>\n</ul>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">int</span> p[<span class=\"number\">110</span>]; <span class=\"comment\">//项目的依赖关系</span></span><br><span class=\"line\"><span class=\"type\">int</span> t[<span class=\"number\">400</span>]; <span class=\"comment\">//项目所需要的时间</span></span><br><span class=\"line\"><span class=\"type\">int</span> o[<span class=\"number\">110</span>]; <span class=\"comment\">//项目最晚开始时间</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, m;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; p[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; t[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">int</span> isp = <span class=\"number\">1</span>; <span class=\"comment\">//用来判断是否需要输出第二行</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++) <span class=\"comment\">//按序号从小到大进行判断</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p[i] == <span class=\"number\">0</span>) <span class=\"comment\">//如果项目不存在依赖关系，最早开始时间直接从1开始</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"number\">1</span> &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"comment\">//项目存在依赖关系</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> tmp = p[i], sum = <span class=\"number\">1</span>; <span class=\"comment\">//tmp表示所依赖的项目号，sum表示最早开始时间</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (tmp) <span class=\"comment\">//如果存在依赖关系</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                sum += t[tmp]; <span class=\"comment\">//最早开始时间=所依赖的项目的最早开始时间+完成依赖项目所需要的时间</span></span><br><span class=\"line\">                tmp = p[tmp]; <span class=\"comment\">//所依赖项目所依赖的项目的最早开始时间（这里有点绕，如果使用数组解释起来应该会好一点）</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (sum + t[i] &gt; n) <span class=\"comment\">//如果某一项目最早开始时间+项目所需时间仍然&gt;n，说明该项目不可能在规定时间内完成，因此也就不用输出第二行</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                isp = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            cout &lt;&lt; sum &lt;&lt; <span class=\"string\">&quot; &quot;</span>; <span class=\"comment\">//输出最早开始时间</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isp == <span class=\"number\">0</span>) <span class=\"comment\">//判断是否有最晚开始时间</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++) <span class=\"comment\">//进行初始化</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        o[i] = <span class=\"number\">400</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = m; i &gt;= <span class=\"number\">1</span>; i--) <span class=\"comment\">//求最晚开始时间，因此要倒着来</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p[i] == <span class=\"number\">0</span> &amp;&amp; (n - t[i] + <span class=\"number\">1</span>) &lt; o[i]) <span class=\"comment\">//如果项目不存在依赖关系并且它是我们所求得最晚开始时间中较小的一个，那么让它的最晚开始时间取较小值</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            o[i] = n - t[i] + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"comment\">//项目存在依赖关系</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> tmp = p[i], sum = n - t[i] + <span class=\"number\">1</span>; <span class=\"comment\">//tmp表示所依赖项目的编号，sum表示最晚开始时间</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (sum &lt; o[i]) <span class=\"comment\">//如果最晚开始时间取较小值</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                o[i] = sum;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (tmp) <span class=\"comment\">//对于所依赖的项目，它的最晚开始时间依赖于后一个项目的最晚开始时间</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                sum -= t[tmp]; <span class=\"comment\">//所依赖项目的最晚开始时间=后一个项目的最晚开始时间-所依赖项目的完成时间</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (sum &lt; o[tmp]) <span class=\"comment\">//如果两个项目同时依赖于一个项目，那么最晚开始时间只能取较小的那个</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    o[tmp] = sum;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                tmp = p[tmp]; <span class=\"comment\">//计算所依赖项目的所依赖项目的最晚开始时间</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= m; i++) <span class=\"comment\">//输出</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; o[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">10 3</span></span><br><span class=\"line\"><span class=\"comment\">0 1 2</span></span><br><span class=\"line\"><span class=\"comment\">1 2 3</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">1 2 4</span></span><br><span class=\"line\"><span class=\"comment\">5 6 8</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"CSP202209-2何以包邮\"><a href=\"#CSP202209-2何以包邮\" class=\"headerlink\" title=\"CSP202209-2何以包邮\"></a>CSP202209-2何以包邮</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>新学期伊始，适逢顿顿书城有购书满x元包邮的活动，小P同学欣然前往准备买些参考书。一番浏览后，小P初步筛选出n本书加入购物车中，其中第i本（1&lt;i&lt;n）的价格为ai元。考虑到预算有限，在最终付款前小P决定再从购物车中删去几本书（也可以不删），使得剩余图书的价格总和m在满足包邮条件（m&gt;&#x3D;x）的前提下最小。试帮助小P计算，最终选购哪些书可以在凑够z元包邮的前提下花费最小？</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h2><p>从标准输入读入数据。</p>\n<p>输入的第一行包含空格分隔的两个正整数n和x，分别表示购物车中图书数量和包邮条件。</p>\n<p>接下来输入n行，其中第i行（1≤i≤n）仅包含一个正整数ai，表示购物车中第i本书的价格。输入数据保证n本书的价格总和不小于x。</p>\n<h2 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h2><p>输出到标准输出。</p>\n<p>仅输出一个正整数，表示在满足包邮条件下的最小花费。</p>\n<h2 id=\"样例1输入\"><a href=\"#样例1输入\" class=\"headerlink\" title=\"样例1输入\"></a>样例1输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4 100</span><br><span class=\"line\">20</span><br><span class=\"line\">90</span><br><span class=\"line\">60</span><br><span class=\"line\">60</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例1输出\"><a href=\"#样例1输出\" class=\"headerlink\" title=\"样例1输出\"></a>样例1输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">110</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例1解释\"><a href=\"#样例1解释\" class=\"headerlink\" title=\"样例1解释\"></a>样例1解释</h2><p>购买前两本书（20+90）即可包邮且花费最小。</p>\n<h2 id=\"样例2输入\"><a href=\"#样例2输入\" class=\"headerlink\" title=\"样例2输入\"></a>样例2输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 30</span><br><span class=\"line\">15</span><br><span class=\"line\">40</span><br><span class=\"line\">30</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例2输出\"><a href=\"#样例2输出\" class=\"headerlink\" title=\"样例2输出\"></a>样例2输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">30</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例2解释\"><a href=\"#样例2解释\" class=\"headerlink\" title=\"样例2解释\"></a>样例2解释</h2><p>仅购买第三本书恰好可以满足包邮条件。</p>\n<h2 id=\"样例3输入\"><a href=\"#样例3输入\" class=\"headerlink\" title=\"样例3输入\"></a>样例3输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2 90</span><br><span class=\"line\">50</span><br><span class=\"line\">50</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例3输出\"><a href=\"#样例3输出\" class=\"headerlink\" title=\"样例3输出\"></a>样例3输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">100</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例3解释\"><a href=\"#样例3解释\" class=\"headerlink\" title=\"样例3解释\"></a>样例3解释</h2><p>必须全部购买才能包邮。</p>\n<h2 id=\"子任务-1\"><a href=\"#子任务-1\" class=\"headerlink\" title=\"子任务\"></a>子任务</h2><p>70% 的测试数据满足：n≤15；</p>\n<p>全部的测试数据满足：n≤30，每本书的价格ai≤10e4 且 x≤a1+a2+⋯+an。</p>\n<h2 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h2><p>对于 70% 的测试数据，直接枚举所有可能的情况即可。</p>\n<h2 id=\"思路1\"><a href=\"#思路1\" class=\"headerlink\" title=\"思路1\"></a>思路1</h2><p>这个是我自己的一个思路，整体理解起来不是很困难，用一维数组的位置来代表书的价钱，这样可以利用到之前计算的结果，避免重复计算</p>\n<h2 id=\"代码1\"><a href=\"#代码1\" class=\"headerlink\" title=\"代码1\"></a>代码1</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">10e6</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, x, v, sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> f[<span class=\"number\">35</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> a[N], b[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; x;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; f[i];</span><br><span class=\"line\">        sum += f[i]; <span class=\"comment\">//sum表示书的总价钱</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= sum; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[j] != <span class=\"number\">0</span>) <span class=\"comment\">//如果a[j]！=0，说明j为第i本书之前的某一本书或者某几本书的价钱总和</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                b[j + f[i]] = <span class=\"number\">1</span>; <span class=\"comment\">//然后再加上第i本书的价格，即可列出前i本书的全部组合</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        a[f[i]] = <span class=\"number\">1</span>; <span class=\"comment\">//将第i本书单独拎出</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= sum; j++) <span class=\"comment\">//将前i-1本书的所有组合与加上第i本书和的组合进行综合，即可得到前i本书的全部组合</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            a[j] = a[j] + b[j];</span><br><span class=\"line\">            b[j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = x;; i++) <span class=\"comment\">//从x开始，找到第一个非0的数，即为价钱最小的组合</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a[i] != <span class=\"number\">0</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cout &lt;&lt; i &lt;&lt; endl;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"思路2\"><a href=\"#思路2\" class=\"headerlink\" title=\"思路2\"></a>思路2</h2><p>这一思路是采用01背包问题的解法，虽然可能不是很容易理解，但是采用这种思路，这一题会非常简单</p>\n<p>书的价格既是价值又是体积，用sum表示所有书的价格，这就是我们当前的体积</p>\n<h2 id=\"代码2\"><a href=\"#代码2\" class=\"headerlink\" title=\"代码2\"></a>代码2</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">10e6</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, x, v, sum;</span><br><span class=\"line\"><span class=\"type\">int</span> f[N]; <span class=\"comment\">//容量为N的情况下最多可装下f[N]的东西</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; x;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; v;</span><br><span class=\"line\">        sum += v;<span class=\"comment\">//用sum表示当前的体积</span></span><br><span class=\"line\">        <span class=\"comment\">//分两种情况，第i本书放入背包和不放入背包</span></span><br><span class=\"line\">        <span class=\"comment\">//对于f[j]，当j=sum时，表示所有书的价钱总和；当v=&lt;j&lt;sum时，表示不选第i本书</span></span><br><span class=\"line\">        <span class=\"comment\">//f[j-v]+v表示必须选第i本书（价值为v），其他空间分给i之前的书</span></span><br><span class=\"line\">        <span class=\"comment\">//所以这就是价钱为j时可选的最大的书的价值</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = sum; j &gt;= v; j--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            f[j] = <span class=\"built_in\">max</span>(f[j], f[j - v] + v);  </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = x;; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (f[i] &gt;= x)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cout &lt;&lt; f[i] &lt;&lt; endl;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"CSP202206-2寻宝大冒险\"><a href=\"#CSP202206-2寻宝大冒险\" class=\"headerlink\" title=\"CSP202206-2寻宝大冒险\"></a>CSP202206-2寻宝大冒险</h1><p><img src=\"/../images/image-20230213193143904.png\" alt=\"image-20230213193143904\"></p>\n<h2 id=\"样例-1-输入-1\"><a href=\"#样例-1-输入-1\" class=\"headerlink\" title=\"样例 1 输入\"></a>样例 1 输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5 100 2</span><br><span class=\"line\">0 0</span><br><span class=\"line\">1 1</span><br><span class=\"line\">2 2</span><br><span class=\"line\">3 3</span><br><span class=\"line\">4 4</span><br><span class=\"line\">0 0 1</span><br><span class=\"line\">0 1 0</span><br><span class=\"line\">1 0 0</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例-1-输出-1\"><a href=\"#样例-1-输出-1\" class=\"headerlink\" title=\"样例 1 输出\"></a>样例 1 输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例-1-解释\"><a href=\"#样例-1-解释\" class=\"headerlink\" title=\"样例 1 解释\"></a>样例 1 解释</h2><p>绿化图上 (0,0)、(1,1) 和 (2,2) 三处均可能埋有宝藏。</p>\n<h2 id=\"样例-2-输入-1\"><a href=\"#样例-2-输入-1\" class=\"headerlink\" title=\"样例 2 输入\"></a>样例 2 输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5 4 2</span><br><span class=\"line\">0 0</span><br><span class=\"line\">1 1</span><br><span class=\"line\">2 2</span><br><span class=\"line\">3 3</span><br><span class=\"line\">4 4</span><br><span class=\"line\">0 0 0</span><br><span class=\"line\">0 1 0</span><br><span class=\"line\">1 0 0</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例-2-输出-1\"><a href=\"#样例-2-输出-1\" class=\"headerlink\" title=\"样例 2 输出\"></a>样例 2 输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例-2-解释\"><a href=\"#样例-2-解释\" class=\"headerlink\" title=\"样例 2 解释\"></a>样例 2 解释</h2><p>如果将藏宝图左下角与绿化图 (3,3) 处对应，则藏宝图右上角会超出绿化图边界，对应不成功。</p>\n<h2 id=\"子任务-2\"><a href=\"#子任务-2\" class=\"headerlink\" title=\"子任务\"></a>子任务</h2><p>40% 的测试数据满足：L≤50；</p>\n<p>70% 的测试数据满足：L≤2000；</p>\n<p>全部的测试数据满足：n≤1000、L≤109 且 S≤50。</p>\n<h2 id=\"提示-1\"><a href=\"#提示-1\" class=\"headerlink\" title=\"提示\"></a>提示</h2><p>实际测试数据中不包括答案为 0 的用例。</p>\n<h2 id=\"思路-1\"><a href=\"#思路-1\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>这一题明明感觉不难，但还是困了我几个小时，从一开始思路是正确的，但是对于小地图与大地图中间是否相同的判断上出了问题，一直找不到原因，由于这题的大地图的范围过大，如果是用二维数组来解，显然会运行超时，因此不能用构建二维数组的方法，所以只用针对有需要在二维数组上填1的位置，由于小地图的左下角一定是1，因此根据大地图中所以1的位置，用它来对应小地图的左下角，然后判断其他部分是否与小地图一致，通过这样即可判断出</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">1010</span>][<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> b[<span class=\"number\">55</span>][<span class=\"number\">55</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> n, L, S, sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">func</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = S; i &gt;= <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= S; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> cx = S - i;</span><br><span class=\"line\">            <span class=\"type\">int</span> cy = j;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x + cx &lt; <span class=\"number\">0</span> || x + cx &gt; L || y + cy &gt; L || y + cy &lt; <span class=\"number\">0</span>) <span class=\"comment\">//如果小地图的范围超出，则返回false</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"type\">int</span> tmp = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; n; k++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (x + cx == a[k][<span class=\"number\">0</span>] &amp;&amp; y + cy == a[k][<span class=\"number\">1</span>]) <span class=\"comment\">//判断小地图上有树的地方是否在大地图对应位置上也存在树</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    tmp = <span class=\"number\">1</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//主要还是这一点我没考虑到，当tmp=0，说明大地图在该位置上没有树，tmp=1，说明大地图在该位置上有树，因此直接tmp与b[i][j]求异或</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((b[i][j] &amp;&amp; !tmp) || (!b[i][j] &amp;&amp; tmp)) <span class=\"comment\">//</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; L &gt;&gt; S;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; a[i][<span class=\"number\">0</span>] &gt;&gt; a[i][<span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;= S; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt;= S; j++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            cin &gt;&gt; b[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">func</span>(a[i][<span class=\"number\">0</span>], a[i][<span class=\"number\">1</span>]))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            sum++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">5 100 2</span></span><br><span class=\"line\"><span class=\"comment\">0 0</span></span><br><span class=\"line\"><span class=\"comment\">1 1</span></span><br><span class=\"line\"><span class=\"comment\">2 2</span></span><br><span class=\"line\"><span class=\"comment\">3 3</span></span><br><span class=\"line\"><span class=\"comment\">4 4</span></span><br><span class=\"line\"><span class=\"comment\">0 0 1</span></span><br><span class=\"line\"><span class=\"comment\">0 1 0</span></span><br><span class=\"line\"><span class=\"comment\">1 0 0</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"CSP202203-2出行计划\"><a href=\"#CSP202203-2出行计划\" class=\"headerlink\" title=\"CSP202203-2出行计划\"></a>CSP202203-2出行计划</h1><p><img src=\"/../images/image-20230214123534821.png\" alt=\"image-20230214123534821\"></p>\n<h2 id=\"样例输入\"><a href=\"#样例输入\" class=\"headerlink\" title=\"样例输入\"></a>样例输入</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6 2 10</span><br><span class=\"line\">5 24</span><br><span class=\"line\">10 24</span><br><span class=\"line\">11 24</span><br><span class=\"line\">34 24</span><br><span class=\"line\">35 24</span><br><span class=\"line\">35 48</span><br><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例输出\"><a href=\"#样例输出\" class=\"headerlink\" title=\"样例输出\"></a>样例输出</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">3</span><br></pre></td></tr></table></figure>\n\n<p>Data</p>\n<h2 id=\"样例解释\"><a href=\"#样例解释\" class=\"headerlink\" title=\"样例解释\"></a>样例解释</h2><p>时刻 1 做检测，可以满足第三、四、六项出行计划；</p>\n<p>时刻 2 做检测，可以满足第四、五、六项出行计划。</p>\n<h2 id=\"子任务-3\"><a href=\"#子任务-3\" class=\"headerlink\" title=\"子任务\"></a>子任务</h2><p>40% 的测试数据满足 0&lt;n,k≤1000、m&#x3D;1；</p>\n<p>70% 的测试数据满足 0&lt;n,m,k≤1000；</p>\n<p>全部的测试数据满足 0&lt;n,m,k≤10e5。</p>\n<h2 id=\"思路-2\"><a href=\"#思路-2\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>这一题使用的是差分算法，结合下面这张图可以更好理解，我们只需根据出行计划以及核酸检测有效的时间，即可判断出当核酸检测结果在[x-k+1，x]之间时，即最早时间核酸报告（left）和最晚时间核酸报告（right），即可满足计划，因此我们只需判断核酸结果时间在多少个计划之内</p>\n<p>这里我们就需要使用到差分算法，因为差分算法要使用累加和的方法，因此我们将所有计划的left+1，再将right-1，当核酸报告时间&gt;&#x3D;left时，说明此时核酸检测结果满足要求，由于left+1，因此求累加和的时候，[left，right]中的所有数都完成了+1，但如果当核酸结果&gt;right时，说明此时核酸检测结果又不满足要求，因此我们需要将不满足的计划剔除，因此需要将right-1，由于left+1，right-1，因此当核酸检测结果不在计划之内时，由于是累加和，+1与-1相互抵消，所以就相当于这个计划对结果没有影响</p>\n<p><img src=\"/../images/image-20230214124836111.png\" alt=\"image-20230214124836111\"></p>\n<h2 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">10e5</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, k;</span><br><span class=\"line\"><span class=\"type\">int</span> b[N];</span><br><span class=\"line\"><span class=\"type\">int</span> c[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> x, y;</span><br><span class=\"line\">        cin &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">        <span class=\"type\">int</span> left = x - y + <span class=\"number\">1</span>; <span class=\"comment\">//left表示满足计划的最早核酸结果时间</span></span><br><span class=\"line\">        left = left &gt; <span class=\"number\">0</span> ? left : <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> right = x; <span class=\"comment\">//right表示满足计划的最晚核酸结果时间</span></span><br><span class=\"line\">        b[left] += <span class=\"number\">1</span>;</span><br><span class=\"line\">        b[right + <span class=\"number\">1</span>] -= <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; N; i++) <span class=\"comment\">//差分算法关键一步，求累加和</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        b[i] += b[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; c[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) <span class=\"comment\">//我们只需判断核酸检测结果在数组上的位置即可得到满足条件的计划数</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; b[c[i] + k] &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">6 2 10</span></span><br><span class=\"line\"><span class=\"comment\">5 24</span></span><br><span class=\"line\"><span class=\"comment\">10 24</span></span><br><span class=\"line\"><span class=\"comment\">11 24</span></span><br><span class=\"line\"><span class=\"comment\">34 24</span></span><br><span class=\"line\"><span class=\"comment\">35 24</span></span><br><span class=\"line\"><span class=\"comment\">35 48</span></span><br><span class=\"line\"><span class=\"comment\">1</span></span><br><span class=\"line\"><span class=\"comment\">2</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"202112-2序列查询新解\"><a href=\"#202112-2序列查询新解\" class=\"headerlink\" title=\"202112-2序列查询新解\"></a>202112-2序列查询新解</h1><p><img src=\"/../images/image-20230215151242859.png\" alt=\"image-20230215151242859\"></p>\n<p><img src=\"/../images/image-20230215151426313.png\" alt=\"image-20230215151426313\"></p>\n<p><img src=\"/../images/image-20230215151441084.png\" alt=\"image-20230215151441084\"></p>\n<h2 id=\"思路-3\"><a href=\"#思路-3\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>本题的一个关键点在于分段</p>\n<ul>\n<li>先对f分段：for(int i&#x3D;1;i&lt;&#x3D;n+1;i++) &#x2F;&#x2F;以f(i)为区域划分计算，在此区域内f的取值相同，值为：i-1；</li>\n<li>再对每个f值相同的区域按照g值进行分段：for（int j&#x3D;a[i-1]；j&lt;&#x3D;a[i]-1；j&#x3D;j+Long）{&#x2F;&#x2F;此区间内有Long个g取值为g(j)的数<br>j值改变条件为：j&#x3D;j+Long，这个Long为变值，因为g取值相同的区间不完全与f取值相同的区间对齐。<br>所以每次都要计算此Long：Long&#x3D;NumLong&#x3D;NumEnd-j+1;<br>注：由于此特性，所以g取值的上界可能超出了此区间（按f取值相同来划分的区间）的上界<br>所以需要此语句：if（NumEnd&gt;a[i]-1） NumEnd&#x3D;a[i]-1；&#x2F;&#x2F;上界超出范围，变为区间最上界 ，来将此情况的bug修复。</li>\n</ul>\n<h2 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> M = <span class=\"number\">10e5</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> n, N, r, Long = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"type\">long</span> <span class=\"type\">long</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> a[M];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">long</span> <span class=\"type\">long</span> <span class=\"title\">g</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x / r;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; N;</span><br><span class=\"line\">    r = N / (n + <span class=\"number\">1</span>);</span><br><span class=\"line\">    a[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    a[n + <span class=\"number\">1</span>] = N;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; a[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n + <span class=\"number\">1</span>; i++) <span class=\"comment\">//以f(i)为区域划分计算 </span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"type\">long</span> tmp = <span class=\"number\">0</span>; <span class=\"comment\">//记录此小区间差值的和 </span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = a[i - <span class=\"number\">1</span>]; j &lt;= a[i] - <span class=\"number\">1</span>; j += Long) <span class=\"comment\">//此区间内有Long个g取值为g(j)的数 </span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> NumEnd = (<span class=\"built_in\">g</span>(j) + <span class=\"number\">1</span>) * r - <span class=\"number\">1</span>; <span class=\"comment\">//g取值为g(j)最大的数为NumEnd</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (NumEnd &gt; a[i] - <span class=\"number\">1</span>) <span class=\"comment\">//上界超出范围，变为区间最上界 </span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                NumEnd = a[i] - <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"type\">int</span> NumLong = NumEnd - j + <span class=\"number\">1</span>; <span class=\"comment\">//取值为g(j)的数为NumLong个</span></span><br><span class=\"line\">            <span class=\"type\">long</span> <span class=\"type\">long</span> f_g = <span class=\"built_in\">abs</span>(i - <span class=\"number\">1</span> - <span class=\"built_in\">g</span>(j)); <span class=\"comment\">//f与g差值，f值恒为i-1 </span></span><br><span class=\"line\">            tmp += f_g * NumLong;</span><br><span class=\"line\">            Long = NumLong;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sum += tmp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">3 10</span></span><br><span class=\"line\"><span class=\"comment\">2 5 8</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"CSP201709-2公共钥匙盒\"><a href=\"#CSP201709-2公共钥匙盒\" class=\"headerlink\" title=\"CSP201709-2公共钥匙盒\"></a>CSP201709-2公共钥匙盒</h1><p><strong>问题描述</strong></p>\n<p>有一个学校的老师共用<em>N</em>个教室，按照规定，所有的钥匙都必须放在公共钥匙盒里，老师不能带钥匙回家。每次老师上课前，都从公共钥匙盒里找到自己上课的教室的钥匙去开门，上完课后，再将钥匙放回到钥匙盒中。<br>钥匙盒一共有<em>N</em>个挂钩，从左到右排成一排，用来挂<em>N</em>个教室的钥匙。一串钥匙没有固定的悬挂位置，但钥匙上有标识，所以老师们不会弄混钥匙。<br>每次取钥匙的时候，老师们都会找到自己所需要的钥匙将其取走，而不会移动其他钥匙。每次还钥匙的时候，还钥匙的老师会找到最左边的空的挂钩，将钥匙挂在这个挂钩上。如果有多位老师还钥匙，则他们按钥匙编号从小到大的顺序还。如果同一时刻既有老师还钥匙又有老师取钥匙，则老师们会先将钥匙全还回去再取出。<br>今天开始的时候钥匙是按编号从小到大的顺序放在钥匙盒里的。有<em>K</em>位老师要上课，给出每位老师所需要的钥匙、开始上课的时间和上课的时长，假设下课时间就是还钥匙时间，请问最终钥匙盒里面钥匙的顺序是怎样的？</p>\n<p><strong>输入格式</strong></p>\n<p>输入的第一行包含两个整数<em>N</em>, <em>K</em>。<br>接下来<em>K</em>行，每行三个整数<em>w</em>, <em>s</em>, <em>c</em>，分别表示一位老师要使用的钥匙编号、开始上课的时间和上课的时长。可能有多位老师使用同一把钥匙，但是老师使用钥匙的时间不会重叠。<br>保证输入数据满足输入格式，你不用检查数据合法性。</p>\n<p><strong>输出格式</strong></p>\n<p>输出一行，包含<em>N</em>个整数，相邻整数间用一个空格分隔，依次表示每个挂钩上挂的钥匙编号。</p>\n<p><strong>样例输入</strong></p>\n<p>5 2<br>4 3 3<br>2 2 7</p>\n<p><strong>样例输出</strong></p>\n<p>1 4 3 2 5</p>\n<p><strong>样例说明</strong></p>\n<p>第一位老师从时刻3开始使用4号教室的钥匙，使用3单位时间，所以在时刻6还钥匙。第二位老师从时刻2开始使用钥匙，使用7单位时间，所以在时刻9还钥匙。<br>每个关键时刻后的钥匙状态如下（X表示空）：<br>时刻2后为1X345；<br>时刻3后为1X3X5；<br>时刻6后为143X5；<br>时刻9后为14325。</p>\n<p><strong>样例输入</strong></p>\n<p>5 7<br>1 1 14<br>3 3 12<br>1 15 12<br>2 7 20<br>3 18 12<br>4 21 19<br>5 30 9</p>\n<p><strong>样例输出</strong></p>\n<p>1 2 3 5 4</p>\n<p><strong>评测用例规模与约定</strong></p>\n<p>对于30%的评测用例，1 ≤ <em>N</em>, <em>K</em> ≤ 10, 1 ≤ <em>w</em> ≤ <em>N</em>, 1 ≤ <em>s</em>, <em>c</em> ≤ 30；<br>对于60%的评测用例，1 ≤ <em>N</em>, <em>K</em> ≤ 50，1 ≤ <em>w</em> ≤ <em>N</em>，1 ≤ <em>s</em> ≤ 300，1 ≤ <em>c</em> ≤ 50；<br>对于所有评测用例，1 ≤ <em>N</em>, <em>K</em> ≤ 1000，1 ≤ <em>w</em> ≤ <em>N</em>，1 ≤ <em>s</em> ≤ 10000，1 ≤ <em>c</em> ≤ 100。</p>\n<p><strong>详解：</strong></p>\n<p>这一题确实是我的问题，我说了20年之后的题目难度不是很大，这个却有点打脸了，虽然有些题目我也没有得满分，但思路方面都还是没问题的，但这一题却可能因为自己心态或者说就是自己能力不足然后没做出来，然后搜了一下发现好像确实挺巧妙的，尤其是那两个数组的设置，所以想记录一下，这也是我做的最后一道第二题，然后也是我第一次记录发表到博客上，希望这是一个好的开始，不多罗嗦了，直接开始吧。</p>\n<p>这一题主要还是思路方面，我其实是没有思路的，然后自己也没深入去想就直接搜答案了，确实不是一个好的习惯。然后这一题主要是那两个数组，我觉得十分的巧妙，key[i]代表的是当前位置放的几号钥匙，last[i]表示编号i的钥匙放什么位置。</p>\n<ol>\n<li>首先要计算出所有钥匙都放回的时间End，然后在此基础上来处理每个时间点钥匙的取放；</li>\n<li>对于每个时间点，需要我们先放钥匙，然后再取钥匙，放钥匙的顺序记得是从最左边开始，而且如果多把钥匙同时放的话需要我们从钥匙号最小的开始，因此这里需要用到一个sort函数，将钥匙号从小到大排序；</li>\n</ol>\n<p>最巧妙的就是这两个数组的设置，让这一题的解答变得简单了很多，直接跟着代码来看思路吧——</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">int</span> N, K, End = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> key[<span class=\"number\">1010</span>], last[<span class=\"number\">1010</span>]; <span class=\"comment\">// key表示当前位置放几号钥匙，last表示编号为i的钥匙放在什么位置</span></span><br><span class=\"line\"><span class=\"comment\">//定义了一个结构体，存放取钥匙的信息，用一个end的成员变量来代表使用结束时间</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">node</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> w;</span><br><span class=\"line\">    <span class=\"type\">int</span> s;</span><br><span class=\"line\">    <span class=\"type\">int</span> c;</span><br><span class=\"line\">    <span class=\"type\">int</span> end;</span><br><span class=\"line\">&#125; a[<span class=\"number\">1010</span>];</span><br><span class=\"line\"><span class=\"comment\">//之后将要用到sort函数，然后提前定义排序方式</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">cmp</span><span class=\"params\">(<span class=\"type\">const</span> node &amp;a, <span class=\"type\">const</span> node &amp;b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a.w &lt; b.w;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; N &gt;&gt; K;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= K; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cin &gt;&gt; a[i].w &gt;&gt; a[i].s &gt;&gt; a[i].c;</span><br><span class=\"line\">        a[i].end = a[i].s + a[i].c; <span class=\"comment\">//计算出每次取用钥匙的结束时间</span></span><br><span class=\"line\">        End = <span class=\"built_in\">max</span>(a[i].end, End); <span class=\"comment\">//用End表示最终结束的时间</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;= N; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        key[i] = i;</span><br><span class=\"line\">        last[i] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= End; i++) <span class=\"comment\">//时间为1~End</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//先还钥匙，还钥匙顺序为从小到大，因此要比较的是a[i].w，按照钥匙号的大小从小到大排序</span></span><br><span class=\"line\">        <span class=\"built_in\">sort</span>(a + <span class=\"number\">1</span>, a + K + <span class=\"number\">1</span>, cmp);</span><br><span class=\"line\">        <span class=\"comment\">//在每一个时间点，都是先还钥匙，然后再取钥匙</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= K; j++) <span class=\"comment\">//还钥匙</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[j].end == i)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">1</span>; k &lt;= N; k++) <span class=\"comment\">//还钥匙需要将钥匙挂到最左边的位置上</span></span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (!key[k]) <span class=\"comment\">//如果key[k]为0，代表k这个位置上没有钥匙，则将钥匙放到该位置上</span></span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        key[k] = a[j].w; <span class=\"comment\">//k这个位置此刻的钥匙的编号为a[j].w</span></span><br><span class=\"line\">                        last[a[j].w] = k; <span class=\"comment\">//a[j].w放的位置为k</span></span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= K; j++) <span class=\"comment\">//取钥匙</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[j].s == i) <span class=\"comment\">//如果到达开始时间</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                key[last[a[j].w]] = <span class=\"number\">0</span>; <span class=\"comment\">//a[j].w号钥匙所放的位置的当前位置为0</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= N; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        cout &lt;&lt; key[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"CSP201712-2游戏\"><a href=\"#CSP201712-2游戏\" class=\"headerlink\" title=\"CSP201712-2游戏\"></a>CSP201712-2游戏</h1><p><strong>问题描述</strong></p>\n<p>　　有<em>n</em>个小朋友围成一圈玩游戏，小朋友从1至<em>n</em>编号，2号小朋友坐在1号小朋友的顺时针方向，3号小朋友坐在2号小朋友的顺时针方向，……，1号小朋友坐在<em>n</em>号小朋友的顺时针方向。<br>　　游戏开始，从1号小朋友开始顺时针报数，接下来每个小朋友的报数是上一个小朋友报的数加1。若一个小朋友报的数为<em>k</em>的倍数或其末位数（即数的个位）为<em>k</em>，则该小朋友被淘汰出局，不再参加以后的报数。当游戏中只剩下一个小朋友时，该小朋友获胜。<br>　　例如，当n&#x3D;5, k&#x3D;2时：<br>　　1号小朋友报数1；<br>　　2号小朋友报数2淘汰；<br>　　3号小朋友报数3；<br>　　4号小朋友报数4淘汰；<br>　　5号小朋友报数5；<br>　　1号小朋友报数6淘汰；<br>　　3号小朋友报数7；<br>　　5号小朋友报数8淘汰；<br>　　3号小朋友获胜。</p>\n<p>　　给定<em>n</em>和<em>k</em>，请问最后获胜的小朋友编号为多少？</p>\n<p><strong>输入格式</strong></p>\n<p>　　输入一行，包括两个整数<em>n</em>和<em>k</em>，意义如题目所述。</p>\n<p><strong>输出格式</strong></p>\n<p>　　输出一行，包含一个整数，表示获胜的小朋友编号。</p>\n<p><strong>样例输入</strong></p>\n<p>5 2</p>\n<p><strong>样例输出</strong></p>\n<p>3</p>\n<p><strong>样例输入</strong></p>\n<p>7 3</p>\n<p><strong>样例输出</strong></p>\n<p>4</p>\n<p><strong>数据规模和约定</strong></p>\n<p>　　对于所有评测用例，1 ≤ <em>n</em> ≤ 1000，1 ≤ <em>k</em> ≤ 9。</p>\n<p><strong>详解：</strong></p>\n<p>这一题我本身是做出来的，最早是想用循环链表来做的，但实在是因为自己数据结构的知识全部忘完了，所以就没采用链表的方法，还是用数组做出来了，然后我上网搜一下看有没有其他不一样的思路，还真让我找到一个，我觉得整个思路非常的好，好像用了一个叫模拟链表的方法，所以就想把他的这个记录下来。</p>\n<p><strong>思路：</strong></p>\n<ol>\n<li><p>首先要根据题目的范围申请一个最大数组，用来模拟链表，每个元素都存储它右边元素的下标，最后一个存储第一个元素的下标</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">下标</th>\n<th align=\"center\">1</th>\n<th align=\"center\">2</th>\n<th align=\"center\">3</th>\n<th align=\"center\">…</th>\n<th align=\"center\">n</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">值</td>\n<td align=\"center\">2</td>\n<td align=\"center\">3</td>\n<td align=\"center\">4</td>\n<td align=\"center\">…</td>\n<td align=\"center\">1</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>然后通过两个变量i和tmp分别存储当前元素的前一个元素下标和当前元素的值、</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">下标</th>\n<th align=\"center\">1（i）</th>\n<th align=\"center\">2（当前元素）</th>\n<th align=\"center\">3</th>\n<th align=\"center\">…</th>\n<th align=\"center\">n</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">值</td>\n<td align=\"center\">2</td>\n<td align=\"center\">3（tmp）</td>\n<td align=\"center\">4</td>\n<td align=\"center\">…</td>\n<td align=\"center\">1</td>\n</tr>\n</tbody></table>\n</li>\n<li><p>i的值为它的前一个元素1，tmp的值为当前值3，如果这两个同学报的数恰好为k或者末位为k，那么该同学将被淘汰</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a[i]=tmp;</span><br><span class=\"line\">tmp=a[tmp];</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n, k;</span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">1010</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">isRemove</span><span class=\"params\">(<span class=\"type\">int</span> x)</span> <span class=\"comment\">//判断该数是否可以整除k或该数末尾是否为k</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x % k == <span class=\"number\">0</span> || (x % <span class=\"number\">10</span>) == k ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">1010</span>; i++) <span class=\"comment\">//建立模拟链表</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        a[i] = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    a[n] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> num = <span class=\"number\">1</span>, i = n, tmp = <span class=\"number\">2</span>; <span class=\"comment\">// num当前报数，i为当前元素的前一个元素下标，tmp为当前元素的值</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">isRemove</span>(num))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            a[i] = tmp;</span><br><span class=\"line\">            n--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            i = a[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        num++;</span><br><span class=\"line\">        tmp = a[tmp];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cout &lt;&lt; i &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n","categories":[],"tags":[{"name":"CSP","slug":"CSP","count":1,"path":"api/tags/CSP.json"}]}